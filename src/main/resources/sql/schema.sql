DROP TABLE IF EXISTS users CASCADE;

CREATE TABLE IF NOT EXISTS users
(
    id       INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    VARCHAR(255) UNIQUE,
    login    VARCHAR(255) UNIQUE,
    name     VARCHAR(255),
    birthday DATE
);

DROP TABLE IF EXISTS users_friends CASCADE;

CREATE TABLE IF NOT EXISTS users_friends
(
    user_id   INTEGER REFERENCES users ON DELETE CASCADE,
    friend_id INTEGER REFERENCES users ON DELETE CASCADE,
    CONSTRAINT user_is_not_its_friend
        CHECK user_id != friend_id
);

DROP TABLE IF EXISTS mpa CASCADE;

CREATE TABLE IF NOT EXISTS mpa
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) UNIQUE
);

DROP TABLE IF EXISTS genre CASCADE;

CREATE TABLE IF NOT EXISTS genre
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) UNIQUE
);

DROP TABLE IF EXISTS films CASCADE;

CREATE TABLE IF NOT EXISTS films
(
    id           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(255) UNIQUE,
    description  VARCHAR(2047),
    duration     INTEGER,
    release_date DATE,
    mpa_id       INTEGER REFERENCES mpa NOT NULL,
    CONSTRAINT positive_duration
        CHECK duration > 0 OR duration IS NULL
);

DROP TABLE IF EXISTS films_genres CASCADE;

CREATE TABLE IF NOT EXISTS films_genres
(
    film_id  INTEGER REFERENCES films (id) ON DELETE CASCADE,
    genre_id INTEGER REFERENCES genre (id)
);

DROP TABLE IF EXISTS films_likes;

CREATE TABLE IF NOT EXISTS films_likes
(
    film_id       INTEGER REFERENCES films (id) ON DELETE CASCADE,
    liked_user_id INTEGER REFERENCES users (id) ON DELETE CASCADE
)